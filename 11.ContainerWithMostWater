class Solution {
    public int maxArea(int[] height) {
        int l=0, r=height.length-1, maxArea=0;
        while(l < r){
            maxArea = Math.max(maxArea, Math.min(height[l], height[r])*(r-l));
            if(height[l] < height[r]){
                l++;
            }else{
                r--;
            }
        }
        return maxArea;
    }
}

/*******************************method-2*****************************/
class Solution {
    public int maxArea(int[] height) {
        int l = 0, r = height.length - 1;
        int max = 0;
         while (l < r) {
            int minHeight = (height[l] < height[r] ? height[l] : height[r]);
           max = Math.max(max, minHeight * (r-l));
            
         while (height[l] <= minHeight && l < r) l++;
         while (height[r] <= minHeight && l < r) r--;
      }
       return max;
    }
}
